[
  {
    "ContainingType": "PracticeAPI.Controllers.FileHandlingController",
    "Method": "DownloadImage",
    "RelativePath": "api/FileHandling/DownloadImage",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "filename",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeAPI.Controllers.FileHandlingController",
    "Method": "GetExcel",
    "RelativePath": "api/FileHandling/GetExcelData",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeAPI.Controllers.FileHandlingController",
    "Method": "SendEmail",
    "RelativePath": "api/FileHandling/SendEmail",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeAPI.Controllers.FileHandlingController",
    "Method": "UploadImage",
    "RelativePath": "api/FileHandling/UploadImage",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "formFile",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      },
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeAPI.Controllers.FileHandlingController",
    "Method": "UploadMultiple",
    "RelativePath": "api/FileHandling/UploadMultipleImage",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "collection",
        "Type": "Microsoft.AspNetCore.Http.IFormFileCollection",
        "IsRequired": false
      },
      {
        "Name": "username",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeAPI.Controllers.LoginController",
    "Method": "Index",
    "RelativePath": "api/Login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "PracticeAPI.Model.LoginDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RoleController",
    "Method": "GetRolebyId",
    "RelativePath": "api/Role/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetRoleById"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RoleController",
    "Method": "GetRoleByName",
    "RelativePath": "api/Role/{name}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetRoleByName"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RoleController",
    "Method": "Create",
    "RelativePath": "api/Role/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "PracticeAPI.Model.RoleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RoleController",
    "Method": "DeleteRole",
    "RelativePath": "api/Role/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "DeletebyId"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RoleController",
    "Method": "GetRoles",
    "RelativePath": "api/Role/GetAllRoles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RoleController",
    "Method": "UpdateRole",
    "RelativePath": "api/Role/UpdateRole",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleDTO",
        "Type": "PracticeAPI.Model.RoleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RolePrivilageController",
    "Method": "GetRolebyId",
    "RelativePath": "api/RolePrivilage/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetRolePrivilageById"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RolePrivilageController",
    "Method": "GetRoleByName",
    "RelativePath": "api/RolePrivilage/{name}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetRolePrivilageByName"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RolePrivilageController",
    "Method": "Create",
    "RelativePath": "api/RolePrivilage/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "PracticeAPI.Model.RolePrivilageDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RolePrivilageController",
    "Method": "DeleteRole",
    "RelativePath": "api/RolePrivilage/Delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "DeletePrivilagesbyId"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RolePrivilageController",
    "Method": "GetPrivilagesByAnyFilter",
    "RelativePath": "api/RolePrivilage/GetAllPrivilageByFilter/{roleid}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleid",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetPrivilagesByAnyFilter"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RolePrivilageController",
    "Method": "GetRoles",
    "RelativePath": "api/RolePrivilage/GetAllRolePrivilages",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PracticeAPI.Controllers.RolePrivilageController",
    "Method": "UpdateRole",
    "RelativePath": "api/RolePrivilage/UpdateRolePrivilage",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roleDTO",
        "Type": "PracticeAPI.Model.RolePrivilageDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PracticeAPI.Controllers.StudentsController",
    "Method": "Index",
    "RelativePath": "api/Students",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PracticeAPI.Controllers.StudentsController",
    "Method": "GetStudentById",
    "RelativePath": "api/Students/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 400
      },
      {
        "Type": "Microsoft.AspNetCore.Mvc.ProblemDetails",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 404
      }
    ],
    "EndpointName": "One student"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.StudentsController",
    "Method": "DeleteStudentById",
    "RelativePath": "api/Students/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "Delete"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.StudentsController",
    "Method": "GetStudentByName",
    "RelativePath": "api/Students/{name}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetStudentByName"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.StudentsController",
    "Method": "GetStudents",
    "RelativePath": "api/Students/All",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[PracticeAPI.Model.APIResponse, PracticeAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "All Student"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.StudentsController",
    "Method": "CreateStudent",
    "RelativePath": "api/Students/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "student",
        "Type": "PracticeAPI.Model.StudentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PracticeAPI.Controllers.StudentsController",
    "Method": "UpdateStudent",
    "RelativePath": "api/Students/Update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "student",
        "Type": "PracticeAPI.Model.StudentDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PracticeAPI.Controllers.UserController",
    "Method": "GetUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.UserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetUserById"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.UserController",
    "Method": "DeleteUser",
    "RelativePath": "api/User/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.UserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "DeleteUserById"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.UserController",
    "Method": "GetUserByName",
    "RelativePath": "api/User/{name}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "name",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.UserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetUserByName"
  },
  {
    "ContainingType": "PracticeAPI.Controllers.UserController",
    "Method": "GetAllUsers",
    "RelativePath": "api/User/All",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[PracticeAPI.Model.UserDTO, PracticeAPI, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PracticeAPI.Controllers.UserController",
    "Method": "CreateNewUser",
    "RelativePath": "api/User/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userDTO",
        "Type": "PracticeAPI.Model.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.APIResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PracticeAPI.Controllers.UserController",
    "Method": "UpdateUser",
    "RelativePath": "api/User/UpdateUser",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userdto",
        "Type": "PracticeAPI.Model.UserDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PracticeAPI.Model.UserDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]